#!/usr/bin/env python
# chmod a+x slam.cfg
PACKAGE = "thermalvis"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

bamode_datatype = gen.enum([ 
	gen.const("dense", int_t, 0, "SBA_DENSE_CHOLESKY"),
	gen.const("sparse", int_t, 1, "SBA_SPARSE_CHOLESKY"),
	gen.const("grad", int_t, 2, "SBA_GRADIENT"),
	gen.const("block", int_t, 3, "SBA_BLOCK_JACOBIAN_PCG") ],
	"An enum to set the bundle adjustment mode")
	
gen.add("pnpIterations", int_t, 0, "Number of iterations to perform for PnP (camera pose estimation from known 3D points)", 100, 0, 1000)
gen.add("inliersPercentage", double_t, 0, "Minimum percentage of inliers to accept PnP pose as valid guide", 0.9, 0.0, 1.0)
	
gen.add("baMode", int_t, 0, "Type of BA to perform", 1, 0, 3, edit_method=bamode_datatype)
gen.add("baStep", double_t, 0, "Initial step size", 1e-4, 0.0, 1.0)

gen.add("minInitializationConfidence", double_t, 0, "Minimum confidence to initialize 3D structure estimate", 0.9, 0.0, 1.0)

gen.add("maxAllowableError", double_t, 0, "Maximum convergence error for publishing pose", 1.0, 0.0, 100.0)

gen.add("verboseMode", bool_t, 0, "Display additional verbal info", False)
gen.add("debugMode", bool_t, 0, "Display additional debug info", False)
gen.add("debugSBA", bool_t, 0, "Display SBA debug info", False)
gen.add("debugTriangulation", bool_t, 0, "Display TRIANGULATION debug info", False)
gen.add("trimFeatureTracks", bool_t, 0, "Remove tracks and projections that are not related to keyframes", True)

gen.add("cameraLatency", double_t, 0, "Lag of camera compared with range sensor", 0.0, -1.0, 1.0)

gen.add("adjustmentFrames", int_t, 0, "Adjustment frames", 15, 1, 100)
gen.add("pairsForTriangulation", int_t, 0, "Number of frames a feature must appear in before it's triangulated", 2, 1, 100)

gen.add("dataTimeout", double_t, 0, "Time (sec) after which no data triggers program exit", 5.0, 0.0, 60.0)
gen.add("maxReprojectionDisparity", double_t, 0, "Maximum image distance between reprojection of triangulated 3D point and its 2D occurrence", 50.0, 0.0, 1000.0)

gen.add("maxDistance", double_t, 0, "Maximum distance in meters before old camera poses are discarded", 1.0, 0.0, 5.0)

gen.add("minSeparation", double_t, 0, "Minimum distance in meters between two frames to attempt a triangulation", 0.05, 0.0, 1.0)
gen.add("maxSeparation", double_t, 0, "Maximum distance in meters between two frames to attempt a triangulation", 1.0, 0.0, 5.0)
gen.add("maxStandardDev", double_t, 0, "Maximum standard deviation in meters allowable for a distribution of projected 3D points to accept a triangulation", 0.3, 0.0, 1.0)

gen.add("adjustmentIterations", int_t, 0, "Number of iterations to perform for SBA (Sparse Bundle Adjustment)", 100, 0, 1000)

gen.add("minStartupScore", double_t, 0, "Minimum keyframe pair score for initialization", 0.8000, 0.0000, 1.0000)

gen.add("flowback", int_t, 0, "Flowback frames (per adjustment)", 3, 0, 10)
gen.add("keyframeSpacing", int_t, 0, "See the paper, variable K", 5, 0, 100)
gen.add("maxKeyframeSeparation", int_t, 0, "Maximum number of frames separating keyframes", 15, 0, 100)
gen.add("minKeyframeScore", double_t, 0, "Minimum required keyframe score", 20.0, 0.0, 100.0)


gen.add("motionThreshold", double_t, 0, "Maximum amount of tolerated motion", 20.0, 1.0, 100.0)
gen.add("framesForTriangulation", int_t, 0, "Number of frames a feature must appear in before it's triangulated", 8, 1, 100)
gen.add("min3dPtsForPnP", int_t, 0, "Minimum number of points to use to estimate pose of camera", 24, 0, 100)
gen.add("camerasPerSys", int_t, 0, "Cameras to consider for each bundle adjustment", 10, 0, 100)
gen.add("minTrackedFeatures", int_t, 0, "Minimum number of features that must be tracked", 50, 0, 500)
gen.add("maxGuides", int_t, 0, "Maximum number of camera views to consider for initial pose estimate", 5, 0, 100)
gen.add("minGeometryScore", double_t, 0, "Minimum required geometry score", 30.0, 0.0, 100.0)
gen.add("requiredTrackFrac", double_t, 0, "Required proportion of tracks to be maintained between frames", 0.80, 0.00, 1.00)


gen.add("initialStructureIterations", int_t, 0, "Number of iterations to perform finalizing initial structure", 1000, 0, 1000)
gen.add("poseEstimateIterations", int_t, 0, "Number of iterations to perform when putatively estimating a camera pose", 10, 0, 1000)
gen.add("fullSystemIterations", int_t, 0, "Number of iterations to perform each cycle on the full system", 10, 0, 1000)
gen.add("keyframeIterations", int_t, 0, "Number of iterations to perform each cycle on the keyframes", 10, 0, 1000)
gen.add("subsequenceIterations", int_t, 0, "Number of iterations to perform each cycle on the subsequence", 100, 0, 1000)

gen.add("timeDebug", bool_t, 0, "Display timing information", False)
gen.add("timeSpacing", int_t, 0, "Number of frames to wait before publishing timing info", 5, 0, 100)

exit(gen.generate(PACKAGE, "slam", "slam"))
