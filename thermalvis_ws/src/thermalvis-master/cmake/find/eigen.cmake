IF(IS_WINDOWS)
	SET(EIGEN3_INCLUDE_DIR "C:/eigen")
	# TODO: Conditionally deactivate subprojects that depend on Eigen so you can make Eigen optional again
	#IF(EXISTS ${EIGEN3_INCLUDE_DIR})
		OPTION(USE_EIGEN "Build Eigen-dependent functions." TRUE)
	#ELSE()
	#	OPTION(USE_EIGEN "Build Eigen-dependent functions." FALSE)
	#ENDIF()
ELSE()
	SET(EIGEN3_INCLUDE_DIR "/usr/include/eigen3")
	IF(EXISTS ${EIGEN3_INCLUDE_DIR})
		OPTION(USE_EIGEN "Build Eigen-dependent functions." TRUE)
	ELSE()
		OPTION(USE_EIGEN "Build Eigen-dependent functions." FALSE)
	ENDIF()
ENDIF()

IF(USE_EIGEN)
	SET(Eigen_DIR ${EIGEN3_INCLUDE_DIR} CACHE STRING "Location of Eigen directory containing <cmake> subdirectory." FORCE)
	
	IF(NOT EXISTS "${Eigen_DIR}")
		MESSAGE(FATAL_ERROR "Provided path ${Eigen_DIR} for Eigen directory does not appear to exist! Have you installed Eigen?")
	ENDIF()
	
	IF(IS_WINDOWS)
		IF(NOT EXISTS "${Eigen_DIR}/cmake/FindEigen3.cmake")
			SET(eigen_FOUND FALSE)
			MESSAGE(FATAL_ERROR "Could not find <${Eigen_DIR}/cmake/FindEigen3.cmake>!")
		ENDIF()
		MESSAGE(STATUS "Adding following path to CMAKE_MODULE_PATH: <${Eigen_DIR}/cmake>")
		SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${Eigen_DIR}/cmake")
	ENDIF()
	
	FIND_PACKAGE(Eigen3)
	IF(EIGEN3_FOUND)
		SET(eigen_FOUND TRUE)
		ADD_DEFINITIONS( -D_USE_EIGEN_ )
		SET(ADDITIONAL_INCLUDES ${ADDITIONAL_INCLUDES} ${EIGEN3_INCLUDE_DIR})
	ELSE()
		SET(eigen_FOUND FALSE)
		MESSAGE(FATAL_ERROR "Eigen not found!") # Much of the libraries can be built without Eigen, however, so consider opting not to use it.
	ENDIF()
ENDIF()
